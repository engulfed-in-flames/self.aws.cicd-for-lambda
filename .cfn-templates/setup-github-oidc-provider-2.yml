Description: >
  This CloudFormation template create the following AWS Resources:
    1. GitHubActionsRole — An IAM Role grating permissions to
      - Push Docker image to Amazon ECR
      - Update Lambda function code
    2. GitHubOidc — An OIDC provider for AWS, enabling secure authentication of GitHub Actions workflows

  Granted actions to `GitHubActionsRole`:
    1. To push Docker image built image to Amazon ECR
      - ecr:GetAuthorizationToken
      - ecr:BatchGetImage
      - ecr:BatchCheckLayerAvailability
      - ecr:InitiateLayerUpload
      - ecr:UploadLayerPart
      - ecr:CompleteLayerUpload
      - ecr:PutImage
    2. To update Lambda function code
      - lambda:UpdateFunctionCode

Parameters:
  GitHubOrgName:
    Description: Name of GitHub organization/user (case sensitive)
    Type: String
  GitHubRepositoryName:
    Description: Name of GitHub repository (case sensitive)
    Type: String
  OIDCProviderArn:
    Description: Arn for the GitHub OIDC Provider.
    Type: String
  OIDCAudience:
    Description: Audience supplied to configure-aws-credentials.
    Default: 'sts.amazonaws.com'
    Type: String

Conditions:
  CreateOIDCProvider: !Equals
    - !Ref OIDCProviderArn
    - ''

Resources:
  GitHubActionsRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: GitHubActionsRole
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Federated: !If
                - CreateOIDCProvider
                - !Ref GitHubOidc
                - !Ref OIDCProviderArn
            Action: sts:AssumeRoleWithWebIdentity
            Condition:
              StringEquals:
                # Recommended to filter for the correct audience (`aud`)
                token.actions.githubusercontent.com:aud: !Ref OIDCAudience
              StringLike:
                # Without a subject(`sub`) condition, any GitHub user or repository could potentially assume the role.
                token.actions.githubusercontent.com:sub: !Sub repo:${GitHubOrgName}/${GitHubRepositoryName}:*
      # To allow only actions to be done
      Policies:
        - PolicyName: OidcSafetyPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Sid: OidcSafeties
                Effect: Deny
                Action:
                  - sts:AssumeRole
                Resource: '*'
        - PolicyName: GetAuthorizationToken
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Sid: GetAuthorizationToken
                Effect: Allow
                Action:
                  - ecr:GetAuthorizationToken
                Resource: '*'
        - PolicyName: GitHubActionsECRPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Sid: AllowECRActions
                Effect: Allow
                Action:
                  - ecr:BatchGetImage
                  - ecr:BatchCheckLayerAvailability
                  - ecr:InitiateLayerUpload
                  - ecr:UploadLayerPart
                  - ecr:CompleteLayerUpload
                  - ecr:PutImage
                Resource:
                  - !Sub 'arn:aws:ecr:${AWS::Region}:${AWS::AccountId}:repository/*'
        - PolicyName: GitHubActionsLambdaPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Sid: AllowLambdaActions
                Effect: Allow
                Action:
                  - lambda:UpdateFunctionCode
                Resource:
                  - !Sub 'arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:*'

  GitHubOidc:
    Type: AWS::IAM::OIDCProvider
    Condition: CreateOIDCProvider
    Properties:
      Url: https://token.actions.githubusercontent.com
      ClientIdList:
        - sts.amazonaws.com
      ThumbprintList:
        - ffffffffffffffffffffffffffffffffffffffff

Outputs:
  Role:
    Value: !GetAtt GitHubActionsRole.Arn
